"use strict";const defaults={elements:"h1, h2, h3, h4, h5, h6, p",pattern:/[\t\n.!?]+$/,replace:", Bitch!",before:false,active:false,hash:"bitch",keyword:"bitch"};class Bitchify{constructor(s,e){this.options=Object.assign({},defaults,s);this.active=this.options.active||false;if(e&&typeof e==="function"){this.callback=e}if(this.active||this._isHash()){this.render()}else{this._addKeypress();this._addHashchange()}}render(){if(this.active){return}this.active=true;const s=document.querySelectorAll(this.options.elements);for(const e of s){e.innerHTML=this._replace(e.innerHTML)}document.removeEventListener("keypress",this._onKeypress);window.removeEventListener("hashchange",this._onHashchange);if(this.callback){this.callback()}return this}_replace(s){s=s.trim().replace(this.options.pattern,"");return this.options.before?this.options.replace+s:s+this.options.replace}_isHash(){return this.options.hash&&this._stripHash(window.location.hash)===this._stripHash(this.options.hash)}_stripHash(s){return s.replace(/^#/,"")}_addKeypress(){if(this.options.keyword){this.keylog=[];this.keyword=this.options.keyword;this._onKeypress=this._onKeypress.bind(this);document.addEventListener("keypress",this._onKeypress)}}_addHashchange(){if(this.options.hash){this._onHashchange=this._onHashchange.bind(this);window.addEventListener("hashchange",this._onHashchange)}}_validateKey(s){this.keylog.push(s);if(this.keylog.length>this.keyword.length){this.keylog.shift()}return this.keylog.join("")===this.keyword}_onKeypress(s){if(this._validateKey(s.key)){this.render()}}_onHashchange(){if(this._isHash()){this.render()}}}